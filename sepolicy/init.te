type drm_block_device, dev_type;
type proc_kernel_sched, fs_type;
type qmux, domain;
type qmuxd_socket, file_type;
type rmnet_device, dev_type;
type smem_log_device, dev_type;
type ssd_block_device, dev_type;
type thermal_device, dev_type;

allow init alarm_device:chr_file { write };
allow init block_device:blk_file { write };
allow init debugfs:file { write };
#allow init device:chr_file { read write open };
allow init device:chr_file { ioctl getattr };
allow init drm_block_device:blk_file { write };
#allow init init:binder { call transfer };
allow init init:capability2 { block_suspend };
allow init init:netlink_kobject_uevent_socket { read };
allow init init:netlink_route_socket { getattr nlmsg_read nlmsg_write read setopt write };
allow init init:netlink_socket { bind create read write };
allow init init:netlink_xfrm_socket { bind create };
allow init init:rawip_socket { create setopt };
allow init init:socket { bind create read write };
allow init init:udp_socket { ioctl };
allow init ion_device:chr_file { write ioctl };
allow init kernel:system { module_request };
allow init netd_socket:sock_file { write };
allow init netd:unix_stream_socket { connectto };
allow init persist_file:file { append };
allow init proc_kernel_sched:file { write };
allow init property_socket:sock_file { write };
allow init qmuxd_socket:sock_file { write };
allow init qmux:unix_stream_socket { connectto };
allow init rmnet_device:chr_file { write };
allow init servicemanager:binder { call transfer };
#allow init shell_exec:file { execute_no_trans };
allow init smem_log_device:chr_file { ioctl write };
allow init socket_device:sock_file { create getattr setattr unlink write };
allow init ssd_block_device:blk_file { write };
#allow init system_file:file { execute_no_trans };
allow init tee_device:chr_file { ioctl write };
allow init thermal_device:chr_file { ioctl };
allow init tmpfs:lnk_file { create };
allow init uio_device:chr_file { write };
#allow init vendor_file:file { execute_no_trans };
allow init init:netlink_kobject_uevent_socket { create };
allow init init:netlink_kobject_uevent_socket { setopt };
allow init init:netlink_kobject_uevent_socket { bind };
allow init video_device:chr_file { ioctl write };
#allow init default_android_service:service_manager { add find };
allow init input_device:chr_file { ioctl };
allow init cameraserver:fd { use };
allow init hal_graphics_allocator_default:fd { use };
allow init gpu_device:chr_file { write ioctl };
allow init rtc_device:chr_file { ioctl };

